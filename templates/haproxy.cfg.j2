global
  log /dev/log  local0
  log /dev/log  local1 notice
{% if haproxy_socket != '' %}
  stats socket {{ haproxy_socket }} level admin
{% endif %}
{% if haproxy_chroot != '' %}
  chroot {{ haproxy_chroot }}
{% endif %}
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon
{% for global_var in haproxy_global_vars %}
  {{ global_var }}
{% endfor %}

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
  option  forwardfor
{% if haproxy_version == '1.4' %}
  contimeout 5000
  clitimeout 50000
  srvtimeout 50000
{% else %}
  timeout connect 5000
  timeout client 50000
  timeout server 50000
{% endif %}
{% if ansible_os_family == 'Debian' %}
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http
{% endif %}

frontend {{ haproxy_http_frontend_name }}
  bind {{ haproxy_http_frontend_bind_address }}:{{ haproxy_http_frontend_port }}
  mode {{ haproxy_http_frontend_mode }}
{% if haproxy_http_redirect == true %}
  redirect scheme https code 301 if !{ ssl_fc }
{% endif %}

{% if haproxy_backend_default == true %}
  default_backend {{ haproxy_backend_name }}
{% endif %}

{% if haproxy_https_frontend_enabled == true %}
frontend {{ haproxy_https_frontend_name }}
  bind {{ haproxy_https_frontend_bind_address }}:{{ haproxy_https_frontend_port }} ssl crt {{ haproxy_ssl_certificate }}
  mode {{ haproxy_https_frontend_mode }}
  reqadd X-Forwarded-Proto:\ https
{% endif %}

{% if haproxy_default_context != '' %}
  acl root_only_acl path -i /
  redirect code 301 location /{{ haproxy_default_context }} if root_only_acl
{% endif %}

{% if haproxy_contexts_enabled == true %}
{% for context in haproxy_contexts %}
  acl {{ context.name }}_acl path_beg /{{ context.name }}
{% endfor %}

{% for context in haproxy_contexts %}
  use_backend {{ context.name }} if {{ context.name }}_acl
{% endfor %}

{% for context in haproxy_contexts %}
backend {{ context.name }}
  server {{ context.name }}-primary {{ context.primary_ip }}:{{ context.port }} check
{% if  context.backup_ip  != '' %}
  server {{ context.name }}-backup {{ context.backup_ip }}:{{ context.port }} check
{% endif %}

{% endfor %}
{% endif %}

{% if haproxy_backend_default == true %}
  default_backend {{ haproxy_backend_name }}
{% endif %}
{% if haproxy_backend_default == true %}
backend {{ haproxy_backend_name }}
  mode {{ haproxy_backend_mode }}
  balance {{ haproxy_backend_balance_method }}
  option forwardfor
{% if haproxy_backend_httpchk != '' %}
  option httpchk {{ haproxy_backend_httpchk }}
{% endif %}
  cookie SERVERID insert indirect
{% for backend in haproxy_backend_servers %}
  server {{ backend.name }} {{ backend.address }} cookie {{ backend.name }} check
{% endfor %}
{% endif %}
{% if haproxy_optional_service_enabled == true %}
frontend {{ haproxy_optional_service_name }}
  mode tcp
  bind *:{{ haproxy_optional_service_port }}
  default_backend backend_{{ haproxy_optional_service_name }}
  timeout client 1h

backend backend_{{ haproxy_optional_service_name }}
  mode tcp
  server {{ haproxy_optional_service_name }}-primary {{ haproxy_optional_service_backend_ip }}:{{ haproxy_optional_service_port }}
{% endif %}

