---
haproxy_socket: /var/lib/haproxy/stats
haproxy_chroot: /var/lib/haproxy
haproxy_user: haproxy
haproxy_group: haproxy

# HTTP Frontend settings.
haproxy_http_frontend_name: 'http-frontend'
haproxy_http_frontend_bind_address: '*'
haproxy_http_frontend_port: 80
haproxy_http_frontend_mode: 'http'
haproxy_http_redirect: true

# HTTPS Frontend settings.
haproxy_https_frontend_enabled: true
haproxy_https_frontend_name: 'https-frontend'
haproxy_https_frontend_bind_address: '*'
haproxy_https_frontend_port: 443
haproxy_https_frontend_mode: 'http'
haproxy_ssl_certificate: '/etc/ssl/certs/dev.eea.sk.pem'
haproxy_ssl_certificate_src: '/home/eea/dev.eea.sk.pem'

# Backend settings. haproxy_backend_default = true means, haproxy_backend_servers will be used.
haproxy_backend_default: false
haproxy_backend_name: 'habackend'
haproxy_backend_mode: 'http'
haproxy_backend_balance_method: 'roundrobin'
haproxy_backend_httpchk: 'HEAD / HTTP/1.1\r\nHost:localhost'

# context filters settings
haproxy_contexts_enabled: true
haproxy_contexts:
 - { name: 'jira', primary_ip: '192.168.128.106', backup_ip: '10.10.10.2', port: '8080' }
 - { name: 'confluence', primary_ip: '192.168.128.106', backup_ip: '10.10.10.2', port: '8080' }
 - { name: 'bitbucket', primary_ip: '192.168.128.106', backup_ip: '10.10.10.2', port: '8080' }
 - { name: 'cas', primary_ip: '192.168.128.106', backup_ip: '', port: '8080' }

#HAProxy will proxy /  to "backend:/foo"

haproxy_default_context: 'foo'

#HAProxy optional service definitions.

haproxy_optional_service_enabled: true
haproxy_optional_service_name: sshd
haproxy_optional_service_port: 7999
haproxy_optional_service_backend_ip: 10.33.179.143

# List of backend servers.
#haproxy_backend_servers:
#   - name: app1
#     address: 192.168.0.1:80
#   - name: app2
#     address: 192.168.0.2:80

# Extra global vars (see README for example usage).
haproxy_global_vars: []
